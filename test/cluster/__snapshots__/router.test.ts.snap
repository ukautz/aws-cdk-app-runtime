// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cluster Router Enforces HTTPS Matches Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": {
      "Properties": {
        "Name": "private.domain",
        "Vpc": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
    },
    "RouterLoadBalancer694BC857": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "RouterLoadBalancerSecurityGroupECF3C1A3",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
          {
            "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "RouterLoadBalancerHttpListenerA4498954": {
      "Properties": {
        "DefaultActions": [
          {
            "RedirectConfig": {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpsListener1AA3AD05": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": "arn:of:cert",
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C": {
      "Properties": {
        "HealthCheckPath": "/ping",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "RouterLoadBalancerSecurityGroupECF3C1A3": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB RouterLoadBalancerDDD62D85",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterLoadBalancerSecurityGrouptoRouterServiceSecurityGroup7A6AECCA80C9FB0411": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "RouterNamespaceRecord9BCFD540": {
      "Properties": {
        "Description": "Traefik router",
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "_router",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RouterRouterRecordpublicdomainA3B7B21F": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "RouterLoadBalancer694BC857",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "RouterLoadBalancer694BC857",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "zone-id",
        "Name": "*.public.domain.zone-name.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RouterRouterTaskRoleD9CA40BF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role that router service container assumes so that it communicate with ECS and EC2 APIs to auto-detect services (containers) to route traffic to",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeInstances",
                    "ecs:ListClusters",
                    "ecs:DescribeClusters",
                    "ecs:ListTasks",
                    "ecs:DescribeTasks",
                    "ecs:DescribeContainerInstances",
                    "ecs:DescribeTaskDefinition",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TraefikTaskRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterService55623CD4": {
      "DependsOn": [
        "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C",
        "RouterLoadBalancerHttpsListener1AA3AD05",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Container",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "RouterServiceSecurityGroupB370BAE4",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "RouterNamespaceRecord9BCFD540",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": {
          "Ref": "RouterTaskDefinition69E236C4",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RouterServiceSecurityGroupB370BAE4": {
      "Properties": {
        "GroupDescription": "Default/Router/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterServiceSecurityGroupfromRouterLoadBalancerSecurityGroupBA4B5AD6801EBA11CE": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RouterTaskDefinition69E236C4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS",
                "Value": ":80",
              },
              {
                "Name": "TRAEFIK_LOG",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_LOG_LEVEL",
                "Value": "DEBUG",
              },
              {
                "Name": "TRAEFIK_PING",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PING_ENTRYPOINT",
                "Value": "http",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REFRESHSECONDS",
                "Value": "10",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_CLUSTERS",
                "Value": {
                  "Ref": "ClusterEB0386A7",
                },
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REGION",
                "Value": {
                  "Ref": "AWS::Region",
                },
              },
            ],
            "Essential": true,
            "Image": "router-image:v1.2.3",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "RouterTaskDefinitionContainerLogGroupB3CD506D",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "/cluster/router",
              },
            },
            "Name": "Container",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "RouterTaskDefinitionExecutionRole7E68072E",
            "Arn",
          ],
        },
        "Family": "RouterTaskDefinitionF4FFDD5C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "RouterRouterTaskRoleD9CA40BF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RouterTaskDefinitionContainerLogGroupB3CD506D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "RouterTaskDefinitionExecutionRole7E68072E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RouterTaskDefinitionContainerLogGroupB3CD506D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE",
        "Roles": [
          {
            "Ref": "RouterTaskDefinitionExecutionRole7E68072E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Cluster Router Implements scaling Matches Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": {
      "Properties": {
        "Name": "private.domain",
        "Vpc": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
    },
    "RouterLoadBalancer694BC857": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "RouterLoadBalancerSecurityGroupECF3C1A3",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
          {
            "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "RouterLoadBalancerHttpListenerA4498954": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2": {
      "Properties": {
        "HealthCheckPath": "/ping",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "RouterLoadBalancerSecurityGroupECF3C1A3": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB RouterLoadBalancerDDD62D85",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterLoadBalancerSecurityGrouptoRouterServiceSecurityGroup7A6AECCA80C9FB0411": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "RouterNamespaceRecord9BCFD540": {
      "Properties": {
        "Description": "Traefik router",
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "_router",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RouterRouterRecordpublicdomainA3B7B21F": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "RouterLoadBalancer694BC857",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "RouterLoadBalancer694BC857",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "zone-id",
        "Name": "*.public.domain.zone-name.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RouterRouterTaskRoleD9CA40BF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role that router service container assumes so that it communicate with ECS and EC2 APIs to auto-detect services (containers) to route traffic to",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeInstances",
                    "ecs:ListClusters",
                    "ecs:DescribeClusters",
                    "ecs:ListTasks",
                    "ecs:DescribeTasks",
                    "ecs:DescribeContainerInstances",
                    "ecs:DescribeTaskDefinition",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TraefikTaskRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterService55623CD4": {
      "DependsOn": [
        "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
        "RouterLoadBalancerHttpListenerA4498954",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Container",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "RouterServiceSecurityGroupB370BAE4",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "RouterNamespaceRecord9BCFD540",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": {
          "Ref": "RouterTaskDefinition69E236C4",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RouterServiceSecurityGroupB370BAE4": {
      "Properties": {
        "GroupDescription": "Default/Router/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterServiceSecurityGroupfromRouterLoadBalancerSecurityGroupBA4B5AD6801EBA11CE": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RouterServiceTaskCountTarget439DDD1A": {
      "Properties": {
        "MaxCapacity": 10,
        "MinCapacity": 5,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              {
                "Fn::GetAtt": [
                  "RouterService55623CD4",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::123123123:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "RouterServiceTaskCountTargetCpuScalingDFEC31E1": {
      "Properties": {
        "PolicyName": "RouterServiceTaskCountTargetCpuScalingA4CA04DB",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "RouterServiceTaskCountTarget439DDD1A",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "TargetValue": 65,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "RouterServiceTaskCountTargetMemoryScaling7D43BE3C": {
      "Properties": {
        "PolicyName": "RouterServiceTaskCountTargetMemoryScaling7B9A2A3F",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "RouterServiceTaskCountTarget439DDD1A",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageMemoryUtilization",
          },
          "TargetValue": 85,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "RouterTaskDefinition69E236C4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS",
                "Value": ":80",
              },
              {
                "Name": "TRAEFIK_LOG",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_LOG_LEVEL",
                "Value": "DEBUG",
              },
              {
                "Name": "TRAEFIK_PING",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PING_ENTRYPOINT",
                "Value": "http",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REFRESHSECONDS",
                "Value": "10",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_CLUSTERS",
                "Value": {
                  "Ref": "ClusterEB0386A7",
                },
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REGION",
                "Value": {
                  "Ref": "AWS::Region",
                },
              },
            ],
            "Essential": true,
            "Image": "router-image:v1.2.3",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "RouterTaskDefinitionContainerLogGroupB3CD506D",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "/cluster/router",
              },
            },
            "Name": "Container",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "RouterTaskDefinitionExecutionRole7E68072E",
            "Arn",
          ],
        },
        "Family": "RouterTaskDefinitionF4FFDD5C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "RouterRouterTaskRoleD9CA40BF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RouterTaskDefinitionContainerLogGroupB3CD506D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "RouterTaskDefinitionExecutionRole7E68072E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RouterTaskDefinitionContainerLogGroupB3CD506D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE",
        "Roles": [
          {
            "Ref": "RouterTaskDefinitionExecutionRole7E68072E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Cluster Router Per Default Matches Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": {
      "Properties": {
        "Name": "private.domain",
        "Vpc": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
    },
    "RouterLoadBalancer694BC857": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "RouterLoadBalancerSecurityGroupECF3C1A3",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
          {
            "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "RouterLoadBalancerHttpListenerA4498954": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2": {
      "Properties": {
        "HealthCheckPath": "/ping",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "RouterLoadBalancerSecurityGroupECF3C1A3": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB RouterLoadBalancerDDD62D85",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterLoadBalancerSecurityGrouptoRouterServiceSecurityGroup7A6AECCA80C9FB0411": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "RouterNamespaceRecord9BCFD540": {
      "Properties": {
        "Description": "Traefik router",
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "_router",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RouterRouterRecordpublicdomainA3B7B21F": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "RouterLoadBalancer694BC857",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "RouterLoadBalancer694BC857",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "zone-id",
        "Name": "*.public.domain.zone-name.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RouterRouterTaskRoleD9CA40BF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role that router service container assumes so that it communicate with ECS and EC2 APIs to auto-detect services (containers) to route traffic to",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeInstances",
                    "ecs:ListClusters",
                    "ecs:DescribeClusters",
                    "ecs:ListTasks",
                    "ecs:DescribeTasks",
                    "ecs:DescribeContainerInstances",
                    "ecs:DescribeTaskDefinition",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TraefikTaskRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterService55623CD4": {
      "DependsOn": [
        "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
        "RouterLoadBalancerHttpListenerA4498954",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Container",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "RouterServiceSecurityGroupB370BAE4",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "RouterNamespaceRecord9BCFD540",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": {
          "Ref": "RouterTaskDefinition69E236C4",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RouterServiceSecurityGroupB370BAE4": {
      "Properties": {
        "GroupDescription": "Default/Router/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterServiceSecurityGroupfromRouterLoadBalancerSecurityGroupBA4B5AD6801EBA11CE": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RouterTaskDefinition69E236C4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS",
                "Value": ":80",
              },
              {
                "Name": "TRAEFIK_LOG",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_LOG_LEVEL",
                "Value": "DEBUG",
              },
              {
                "Name": "TRAEFIK_PING",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PING_ENTRYPOINT",
                "Value": "http",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REFRESHSECONDS",
                "Value": "10",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_CLUSTERS",
                "Value": {
                  "Ref": "ClusterEB0386A7",
                },
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REGION",
                "Value": {
                  "Ref": "AWS::Region",
                },
              },
            ],
            "Essential": true,
            "Image": "router-image:v1.2.3",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "RouterTaskDefinitionContainerLogGroupB3CD506D",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "/cluster/router",
              },
            },
            "Name": "Container",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "RouterTaskDefinitionExecutionRole7E68072E",
            "Arn",
          ],
        },
        "Family": "RouterTaskDefinitionF4FFDD5C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "RouterRouterTaskRoleD9CA40BF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RouterTaskDefinitionContainerLogGroupB3CD506D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "RouterTaskDefinitionExecutionRole7E68072E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RouterTaskDefinitionContainerLogGroupB3CD506D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE",
        "Roles": [
          {
            "Ref": "RouterTaskDefinitionExecutionRole7E68072E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Cluster Router Protects load balancer with header condition Matches Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": {
      "Properties": {
        "Name": "private.domain",
        "Vpc": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
    },
    "RouterLoadBalancer694BC857": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "RouterLoadBalancerSecurityGroupECF3C1A3",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
          {
            "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "RouterLoadBalancerHttpListenerA4498954": {
      "Properties": {
        "DefaultActions": [
          {
            "FixedResponseConfig": {
              "ContentType": "text/plain",
              "MessageBody": "Forbidden",
              "StatusCode": "403",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2": {
      "Properties": {
        "HealthCheckPath": "/ping",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "RouterLoadBalancerHttpListenerEcsServiceRule59B0DDE2": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "http-header",
            "HttpHeaderConfig": {
              "HttpHeaderName": "x-foo-bar",
              "Values": [
                "baz",
                "zoing",
              ],
            },
          },
        ],
        "ListenerArn": {
          "Ref": "RouterLoadBalancerHttpListenerA4498954",
        },
        "Priority": 1,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "RouterLoadBalancerSecurityGroupECF3C1A3": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB RouterLoadBalancerDDD62D85",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterLoadBalancerSecurityGrouptoRouterServiceSecurityGroup7A6AECCA80C9FB0411": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "RouterNamespaceRecord9BCFD540": {
      "Properties": {
        "Description": "Traefik router",
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "_router",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RouterRouterRecordpublicdomainA3B7B21F": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "RouterLoadBalancer694BC857",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "RouterLoadBalancer694BC857",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "zone-id",
        "Name": "*.public.domain.zone-name.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RouterRouterTaskRoleD9CA40BF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role that router service container assumes so that it communicate with ECS and EC2 APIs to auto-detect services (containers) to route traffic to",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeInstances",
                    "ecs:ListClusters",
                    "ecs:DescribeClusters",
                    "ecs:ListTasks",
                    "ecs:DescribeTasks",
                    "ecs:DescribeContainerInstances",
                    "ecs:DescribeTaskDefinition",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TraefikTaskRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterService55623CD4": {
      "DependsOn": [
        "RouterLoadBalancerHttpListenerEcsServiceRule59B0DDE2",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Container",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "RouterServiceSecurityGroupB370BAE4",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "RouterNamespaceRecord9BCFD540",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": {
          "Ref": "RouterTaskDefinition69E236C4",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RouterServiceSecurityGroupB370BAE4": {
      "Properties": {
        "GroupDescription": "Default/Router/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterServiceSecurityGroupfromRouterLoadBalancerSecurityGroupBA4B5AD6801EBA11CE": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RouterTaskDefinition69E236C4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS",
                "Value": ":80",
              },
              {
                "Name": "TRAEFIK_LOG",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_LOG_LEVEL",
                "Value": "DEBUG",
              },
              {
                "Name": "TRAEFIK_PING",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PING_ENTRYPOINT",
                "Value": "http",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REFRESHSECONDS",
                "Value": "10",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_CLUSTERS",
                "Value": {
                  "Ref": "ClusterEB0386A7",
                },
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REGION",
                "Value": {
                  "Ref": "AWS::Region",
                },
              },
            ],
            "Essential": true,
            "Image": "router-image:v1.2.3",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "RouterTaskDefinitionContainerLogGroupB3CD506D",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "/cluster/router",
              },
            },
            "Name": "Container",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "RouterTaskDefinitionExecutionRole7E68072E",
            "Arn",
          ],
        },
        "Family": "RouterTaskDefinitionF4FFDD5C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "RouterRouterTaskRoleD9CA40BF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RouterTaskDefinitionContainerLogGroupB3CD506D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "RouterTaskDefinitionExecutionRole7E68072E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RouterTaskDefinitionContainerLogGroupB3CD506D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE",
        "Roles": [
          {
            "Ref": "RouterTaskDefinitionExecutionRole7E68072E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Cluster Router Provides HTTPS endpoint Matches Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": {
      "Properties": {
        "Name": "private.domain",
        "Vpc": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
    },
    "RouterLoadBalancer694BC857": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "RouterLoadBalancerSecurityGroupECF3C1A3",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
          {
            "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "RouterLoadBalancerHttpListenerA4498954": {
      "Properties": {
        "DefaultActions": [
          {
            "RedirectConfig": {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpsListener1AA3AD05": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": "arn:of:cert",
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C": {
      "Properties": {
        "HealthCheckPath": "/ping",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "RouterLoadBalancerSecurityGroupECF3C1A3": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB RouterLoadBalancerDDD62D85",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterLoadBalancerSecurityGrouptoRouterServiceSecurityGroup7A6AECCA80C9FB0411": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "RouterNamespaceRecord9BCFD540": {
      "Properties": {
        "Description": "Traefik router",
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "_router",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RouterRouterRecordpublicdomainA3B7B21F": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "RouterLoadBalancer694BC857",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "RouterLoadBalancer694BC857",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "zone-id",
        "Name": "*.public.domain.zone-name.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RouterRouterTaskRoleD9CA40BF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role that router service container assumes so that it communicate with ECS and EC2 APIs to auto-detect services (containers) to route traffic to",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeInstances",
                    "ecs:ListClusters",
                    "ecs:DescribeClusters",
                    "ecs:ListTasks",
                    "ecs:DescribeTasks",
                    "ecs:DescribeContainerInstances",
                    "ecs:DescribeTaskDefinition",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TraefikTaskRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterService55623CD4": {
      "DependsOn": [
        "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C",
        "RouterLoadBalancerHttpsListener1AA3AD05",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Container",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpsListenerEcsServiceGroupC2BC9A3C",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "RouterServiceSecurityGroupB370BAE4",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "RouterNamespaceRecord9BCFD540",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": {
          "Ref": "RouterTaskDefinition69E236C4",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RouterServiceSecurityGroupB370BAE4": {
      "Properties": {
        "GroupDescription": "Default/Router/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterServiceSecurityGroupfromRouterLoadBalancerSecurityGroupBA4B5AD6801EBA11CE": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RouterTaskDefinition69E236C4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS",
                "Value": ":80",
              },
              {
                "Name": "TRAEFIK_LOG",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_LOG_LEVEL",
                "Value": "DEBUG",
              },
              {
                "Name": "TRAEFIK_PING",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PING_ENTRYPOINT",
                "Value": "http",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REFRESHSECONDS",
                "Value": "10",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_CLUSTERS",
                "Value": {
                  "Ref": "ClusterEB0386A7",
                },
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REGION",
                "Value": {
                  "Ref": "AWS::Region",
                },
              },
            ],
            "Essential": true,
            "Image": "router-image:v1.2.3",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "RouterTaskDefinitionContainerLogGroupB3CD506D",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "/cluster/router",
              },
            },
            "Name": "Container",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "RouterTaskDefinitionExecutionRole7E68072E",
            "Arn",
          ],
        },
        "Family": "RouterTaskDefinitionF4FFDD5C",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "RouterRouterTaskRoleD9CA40BF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RouterTaskDefinitionContainerLogGroupB3CD506D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "RouterTaskDefinitionExecutionRole7E68072E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RouterTaskDefinitionContainerLogGroupB3CD506D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE",
        "Roles": [
          {
            "Ref": "RouterTaskDefinitionExecutionRole7E68072E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Cluster Router Sizes CPU and Memory resources Matches Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": {
      "Properties": {
        "Name": "private.domain",
        "Vpc": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": {
      "Type": "AWS::ECS::Cluster",
    },
    "RouterLoadBalancer694BC857": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "RouterLoadBalancerSecurityGroupECF3C1A3",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
          },
          {
            "Ref": "VpcPublicSubnet2Subnet691E08A3",
          },
          {
            "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "RouterLoadBalancerHttpListenerA4498954": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "RouterLoadBalancer694BC857",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2": {
      "Properties": {
        "HealthCheckPath": "/ping",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "RouterLoadBalancerSecurityGroupECF3C1A3": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB RouterLoadBalancerDDD62D85",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterLoadBalancerSecurityGrouptoRouterServiceSecurityGroup7A6AECCA80C9FB0411": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "RouterNamespaceRecord9BCFD540": {
      "Properties": {
        "Description": "Traefik router",
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 60,
              "Type": "A",
            },
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "Name": "_router",
        "NamespaceId": {
          "Fn::GetAtt": [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RouterRouterRecordpublicdomainA3B7B21F": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "RouterLoadBalancer694BC857",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "RouterLoadBalancer694BC857",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "zone-id",
        "Name": "*.public.domain.zone-name.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "RouterRouterTaskRoleD9CA40BF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role that router service container assumes so that it communicate with ECS and EC2 APIs to auto-detect services (containers) to route traffic to",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeInstances",
                    "ecs:ListClusters",
                    "ecs:DescribeClusters",
                    "ecs:ListTasks",
                    "ecs:DescribeTasks",
                    "ecs:DescribeContainerInstances",
                    "ecs:DescribeTaskDefinition",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TraefikTaskRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterService55623CD4": {
      "DependsOn": [
        "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
        "RouterLoadBalancerHttpListenerA4498954",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "Container",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "RouterLoadBalancerHttpListenerEcsServiceGroup389616A2",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "RouterServiceSecurityGroupB370BAE4",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "RouterNamespaceRecord9BCFD540",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": {
          "Ref": "RouterTaskDefinition69E236C4",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RouterServiceSecurityGroupB370BAE4": {
      "Properties": {
        "GroupDescription": "Default/Router/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RouterServiceSecurityGroupfromRouterLoadBalancerSecurityGroupBA4B5AD6801EBA11CE": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "RouterServiceSecurityGroupB370BAE4",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "RouterLoadBalancerSecurityGroupECF3C1A3",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RouterTaskDefinition69E236C4": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS",
                "Value": ":80",
              },
              {
                "Name": "TRAEFIK_LOG",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_LOG_LEVEL",
                "Value": "DEBUG",
              },
              {
                "Name": "TRAEFIK_PING",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PING_ENTRYPOINT",
                "Value": "http",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS",
                "Value": "true",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REFRESHSECONDS",
                "Value": "10",
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_CLUSTERS",
                "Value": {
                  "Ref": "ClusterEB0386A7",
                },
              },
              {
                "Name": "TRAEFIK_PROVIDERS_ECS_REGION",
                "Value": {
                  "Ref": "AWS::Region",
                },
              },
            ],
            "Essential": true,
            "Image": "router-image:v1.2.3",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "RouterTaskDefinitionContainerLogGroupB3CD506D",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "/cluster/router",
              },
            },
            "Name": "Container",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "HostPort": 80,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "1234",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "RouterTaskDefinitionExecutionRole7E68072E",
            "Arn",
          ],
        },
        "Family": "RouterTaskDefinitionF4FFDD5C",
        "Memory": "2345",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "RouterRouterTaskRoleD9CA40BF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RouterTaskDefinitionContainerLogGroupB3CD506D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "RouterTaskDefinitionExecutionRole7E68072E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "RouterTaskDefinitionContainerLogGroupB3CD506D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RouterTaskDefinitionExecutionRoleDefaultPolicy5F6178AE",
        "Roles": [
          {
            "Ref": "RouterTaskDefinitionExecutionRole7E68072E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet2NATGateway9182C01D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet3NATGateway7640CD1D",
        },
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "DependsOn": [
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1RouteTableAssociation97140677",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2EIP3C605A87": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet2NATGateway9182C01D": {
      "DependsOn": [
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet2EIP3C605A87",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3EIP3A666A23": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet3NATGateway7640CD1D": {
      "DependsOn": [
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet3EIP3A666A23",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
